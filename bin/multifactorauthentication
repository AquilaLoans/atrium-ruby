#!/usr/bin/env ruby
require "atrium"

::Atrium.configure do |config|
  config.mx_client_id = "YOUR_MX_CLIENT_ID"
  config.mx_api_key = "YOUR_MX_API_KEY"
end

puts "\n* Creating user and member with \"CHALLENGED\" aggregation status *"
user = ::Atrium::User.create identifier: nil, is_disabled: nil, metadata: nil

credentialOne = {}
credentialOne[:guid] = "CRD-9f61fb4c-912c-bd1e-b175-ccc7f0275cc1"
credentialOne[:value] = "test_atrium"

credentialTwo = {}
credentialTwo[:guid] = "CRD-e3d7ea81-aac7-05e9-fbdd-4b493c6e474d"
credentialTwo[:value] = "challenge"

credentialArray = []
credentialArray.push(credentialOne)
credentialArray.push(credentialTwo)

member = ::Atrium::Member.create user_guid: user.guid, institution_code: "mxbank", credentials: credentialArray

sleep(1)


puts "\n* Retrieving member aggregation status *"
aggregationResponse = member.aggregation_status
puts "Member aggregation status: " + aggregationResponse.status


puts "\n* MFA Challenge *"
challenges = member.challenges
for challenge in challenges
  puts challenge.label
end

credential = {}
credential[:guid] = challenges[0].guid
credential[:value] = "correct"
challengeResponses = []
challengeResponses.push(credential)

puts "\n* MFA answered correctly, resuming aggregation *"
member.resume challengeResponses

sleep(1)


puts "\n* Retrieving member aggregation status *"
aggregationResponse = member.aggregation_status
puts "Member aggregation status: " + aggregationResponse.status


puts "\n* Deleting test user *"
user.delete
puts "Deleted user: " + user.guid
